name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: |
          corepack enable || true
          yarn install --frozen-lockfile

      - name: Type check (build)
        run: yarn build

      - name: Run unit tests
        env:
          # 実ログ回帰テストは logs.json が無い環境では skip させる
          LOGS_JSON_PATH: __ci_no_logs__
        run: yarn test

      - name: Derive image metadata
        id: meta
        run: |
          IMAGE=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          VERSION=${GITHUB_REF#refs/tags/}
          echo "image=${IMAGE}" >> "$GITHUB_OUTPUT"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Set build timestamp (UTC)
        id: buildtime
        run: echo "ts=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            BUILD_TIMESTAMP=${{ steps.buildtime.outputs.ts }}
          tags: |
            ghcr.io/${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.version }}
            ghcr.io/${{ steps.meta.outputs.image }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
